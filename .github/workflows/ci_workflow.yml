name: Model CI - Training and Docker Push

on:
  push:
    branches:
      - main
    paths:
      - "MLProject_folder/**"
  workflow_dispatch:

jobs:
  train-and-build-docker:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: MLProject_folder

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 3. Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.12"
      - name: 3.5 Install MLflow and DagsHub in Runner
        run: pip install mlflow==2.19.0 dagshub

      - name: 4. Run MLflow Project (Training)
        env:
          DAGSHUB_OWNER: ${{ secrets.DAGSHUB_OWNER }}
          DAGSHUB_REPO_NAME: ${{ secrets.DAGSHUB_REPO_NAME }}
          # Variabel untuk otentikasi DagsHub & MLflow
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_OWNER }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          mlflow run .

      - name: 5. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 6. Build and Push Docker Image (Advanced)
        env:
          MLFLOW_TRACKING_URI: "https://dagshub.com/${{ secrets.DAGSHUB_OWNER }}/${{ secrets.DAGSHUB_REPO_NAME }}.mlflow"
        run: |
          MODEL_NAME="MushroomClassifierRF"

          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/mushroom-classifier-msml:${{ github.sha }}"

          # Membangun image Docker dari model versi "latest" yang terdaftar
          mlflow models build-docker --model-uri "models:/${MODEL_NAME}/latest" --name "${IMAGE_NAME}" --enable-mlserver

          # Mendorong image ke Docker Hub
          docker push "${IMAGE_NAME}"

          echo "Docker image ${IMAGE_NAME} berhasil di-push ke Docker Hub."
